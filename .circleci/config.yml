version: 2.1
orbs:
  aws-s3: circleci/aws-s3@1.0.0
  aws-ecs: circleci/aws-ecs@0.0.3
  aws-cli: circleci/aws-cli@0.1.13
jobs:
  build-frontend:
    docker:
      - image: circleci/node:11.13

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}

      - run: cd frontend && yarn install --frozen-lockfile

      - save_cache:
          paths:
            - frontend/node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      - run: cd frontend && yarn test
      - run: cd frontend && yarn build

      - persist_to_workspace:
          root: "."
          paths: "frontend/dist"

  deploy-frontend:
    docker:
      - image: circleci/python:2.7
    environment:
      AWS_REGION: eu-west-2

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: .
      - aws-s3/sync:
          from: frontend/dist
          to: 's3://shinytouch/'
          overwrite: true

  build-api:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: docker build -t cmartin/shinytouch-api:$CIRCLE_SHA1 ./api
      - run:
          name: Archive Docker image
          command: docker save -o api/image.tar cmartin/shinytouch-api:$CIRCLE_SHA1
      - persist_to_workspace:
          root: .
          paths:
            - ./api/image.tar

  publish-api:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i ./api/image.tar
      - run:
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push cmartin/shinytouch-api:$CIRCLE_SHA1
  deploy-api:
    docker:
      - image: 'circleci/python:3.7.1'
    steps:
      - aws-cli/install
      - aws-cli/configure:
          aws-region: eu-west-2
      - aws-ecs/update-service:
          family: 'shinytouch-api'
          cluster-name: 'shinytouch'
          container-image-name-updates: 'container=shinytouch-api,tag=${CIRCLE_SHA1}'

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build-frontend
      - build-api
      - publish-api:
          requires:
            - build-api
      - deploy-api:
          requires:
            - publish-api
          filters:
            branches:
              only: master
      - deploy-frontend:
          requires:
            - build-frontend
            - deploy-api
          filters:
            branches:
              only: master